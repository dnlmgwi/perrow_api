// Mocks generated by Mockito 5.0.8 from annotations
// in perrow_api/test/wallerService_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i9;

import 'package:hive/hive.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:perrow_api/src/models/api/auth/user/transaction/transAccount.dart'
    as _i5;
import 'package:perrow_api/src/models/block/block.dart' as _i10;
import 'package:perrow_api/src/models/hive/0.transactionRecord/transactionRecord.dart'
    as _i7;
import 'package:perrow_api/src/models/hive/1.rechargeNotification/rechargeNotification.dart'
    as _i8;
import 'package:perrow_api/src/services/accountService.dart' as _i2;
import 'package:perrow_api/src/services/notificationService.dart' as _i3;
import 'package:perrow_api/src/services/walletServices.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeAccountService extends _i1.Fake implements _i2.AccountService {}

class _FakeNotificationService extends _i1.Fake
    implements _i3.NotificationService {}

class _FakeBox<E> extends _i1.Fake implements _i4.Box<E> {}

class _FakeTransAccount extends _i1.Fake implements _i5.TransAccount {}

/// A class which mocks [WalletService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletService extends _i1.Mock implements _i6.WalletService {
  MockWalletService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AccountService get accountService =>
      (super.noSuchMethod(Invocation.getter(#accountService),
          returnValue: _FakeAccountService()) as _i2.AccountService);
  @override
  set accountService(_i2.AccountService? _accountService) =>
      super.noSuchMethod(Invocation.setter(#accountService, _accountService),
          returnValueForMissingStub: null);
  @override
  _i3.NotificationService get notificationService =>
      (super.noSuchMethod(Invocation.getter(#notificationService),
          returnValue: _FakeNotificationService()) as _i3.NotificationService);
  @override
  set notificationService(_i3.NotificationService? _notificationService) =>
      super.noSuchMethod(
          Invocation.setter(#notificationService, _notificationService),
          returnValueForMissingStub: null);
  @override
  _i4.Box<_i7.TransactionRecord> get pendingTransactions =>
      (super.noSuchMethod(Invocation.getter(#pendingTransactions),
              returnValue: _FakeBox<_i7.TransactionRecord>())
          as _i4.Box<_i7.TransactionRecord>);
  @override
  set pendingTransactions(
          _i4.Box<_i7.TransactionRecord>? _pendingTransactions) =>
      super.noSuchMethod(
          Invocation.setter(#pendingTransactions, _pendingTransactions),
          returnValueForMissingStub: null);
  @override
  _i4.Box<_i8.RechargeNotification> get pendingDepositsTansactions =>
      (super.noSuchMethod(Invocation.getter(#pendingDepositsTansactions),
              returnValue: _FakeBox<_i8.RechargeNotification>())
          as _i4.Box<_i8.RechargeNotification>);
  @override
  set pendingDepositsTansactions(
          _i4.Box<_i8.RechargeNotification>? _pendingDepositsTansactions) =>
      super.noSuchMethod(
          Invocation.setter(
              #pendingDepositsTansactions, _pendingDepositsTansactions),
          returnValueForMissingStub: null);
  @override
  _i9.Future<void> processPayments(_i10.Block? prevBlock, String? id) =>
      (super.noSuchMethod(Invocation.method(#processPayments, [prevBlock, id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> depositProcess(_i7.TransactionRecord? element) =>
      (super.noSuchMethod(Invocation.method(#depositProcess, [element]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> withdrawProcess(_i7.TransactionRecord? element) =>
      (super.noSuchMethod(Invocation.method(#withdrawProcess, [element]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> transferProcess(_i7.TransactionRecord? element) =>
      (super.noSuchMethod(Invocation.method(#transferProcess, [element]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<dynamic> editAccountBalance(
          {_i5.TransAccount? senderAccount,
          _i5.TransAccount? recipientAccount,
          int? value,
          int? transactionType}) =>
      (super.noSuchMethod(
          Invocation.method(#editAccountBalance, [], {
            #senderAccount: senderAccount,
            #recipientAccount: recipientAccount,
            #value: value,
            #transactionType: transactionType
          }),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  _i9.Future<_i5.TransAccount> deposit(
          {int? value, _i5.TransAccount? account}) =>
      (super.noSuchMethod(
          Invocation.method(#deposit, [], {#value: value, #account: account}),
          returnValue:
              Future<_i5.TransAccount>.value(_FakeTransAccount())) as _i9
          .Future<_i5.TransAccount>);
  @override
  _i9.Future<void> transfer(
          {int? value,
          _i5.TransAccount? senderAccount,
          _i5.TransAccount? recipientAccount}) =>
      (super.noSuchMethod(
          Invocation.method(#transfer, [], {
            #value: value,
            #senderAccount: senderAccount,
            #recipientAccount: recipientAccount
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> withdraw({int? value, _i5.TransAccount? account}) =>
      (super.noSuchMethod(
          Invocation.method(#withdraw, [], {#value: value, #account: account}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> checkAccountBalance(
          {int? value, _i5.TransAccount? account}) =>
      (super.noSuchMethod(
          Invocation.method(
              #checkAccountBalance, [], {#value: value, #account: account}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> initiateTopUp({_i4.Box<_i8.RechargeNotification>? data}) =>
      (super.noSuchMethod(Invocation.method(#initiateTopUp, [], {#data: data}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  int extractMKAmount(_i8.RechargeNotification? item) =>
      (super.noSuchMethod(Invocation.method(#extractMKAmount, [item]),
          returnValue: 0) as int);
  @override
  _i9.Future<void> initiateTransfer(
          {String? senderid, String? recipientid, int? amount}) =>
      (super.noSuchMethod(
          Invocation.method(#initiateTransfer, [], {
            #senderid: senderid,
            #recipientid: recipientid,
            #amount: amount
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<dynamic> addToPendingDeposit(
          String? sender, String? recipient, int? amount) =>
      (super.noSuchMethod(
          Invocation.method(#addToPendingDeposit, [sender, recipient, amount]),
          returnValue: Future<dynamic>.value()) as _i9.Future<dynamic>);
  @override
  void addToPendingWithDraw(String? sender, String? recipient, int? amount) =>
      super.noSuchMethod(
          Invocation.method(#addToPendingWithDraw, [sender, recipient, amount]),
          returnValueForMissingStub: null);
  @override
  void addToPendingTransfer(String? sender, String? recipient, int? amount) =>
      super.noSuchMethod(
          Invocation.method(#addToPendingTransfer, [sender, recipient, amount]),
          returnValueForMissingStub: null);
  @override
  _i9.Future<bool> accountStatusCheck(String? sender) =>
      (super.noSuchMethod(Invocation.method(#accountStatusCheck, [sender]),
          returnValue: Future<bool>.value(false)) as _i9.Future<bool>);
  @override
  _i9.Future<bool> recipientValidation(String? recipient) =>
      (super.noSuchMethod(Invocation.method(#recipientValidation, [recipient]),
          returnValue: Future<bool>.value(false)) as _i9.Future<bool>);
  @override
  _i9.Future<void> changeAccountStatusToProcessing(String? id) => (super
      .noSuchMethod(Invocation.method(#changeAccountStatusToProcessing, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> changeClaimToTrue(String? transID) =>
      (super.noSuchMethod(Invocation.method(#changeClaimToTrue, [transID]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
  @override
  _i9.Future<void> changeAccountStatusNormal(String? id) =>
      (super.noSuchMethod(Invocation.method(#changeAccountStatusNormal, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i9.Future<void>);
}
